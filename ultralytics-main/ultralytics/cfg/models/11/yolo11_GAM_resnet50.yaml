# Ultralytics YOLO ðŸš€, AGPL-3.0 license
# YOLO11 object detection model with P3-P5 outputs. For Usage examples see https://docs.ultralytics.com/tasks/detect

# Parameters
nc: 10 # number of classes
scales: # model compound scaling constants, i.e. 'model=yolo11n.yaml' will call yolo11_GAM.yaml with scale 'n'
  # [depth, width, max_channels]
  n: [0.50, 0.25, 1024] # summary: 319 layers, 2624080 parameters, 2624064 gradients, 6.6 GFLOPs
  s: [0.50, 0.50, 1024] # summary: 319 layers, 9458752 parameters, 9458736 gradients, 21.7 GFLOPs
  m: [0.50, 1.00, 512] # summary: 409 layers, 20114688 parameters, 20114672 gradients, 68.5 GFLOPs
  l: [1.00, 1.00, 512] # summary: 631 layers, 25372160 parameters, 25372144 gradients, 87.6 GFLOPs
  x: [1.00, 1.50, 512] # summary: 631 layers, 56966176 parameters, 56966160 gradients, 196.0 GFLOPs

# YOLO11n backbone
# YOLOv8 ResNet50 backbone
backbone:
  # Initial Convolution
  - [-1, 1, ConvNormLayer, [64, 7, 2, 3, 'relu',1]]  # 0 - Conv1
  - [-1, 1, nn.MaxPool2d, [3, 2, 1]]  # 1 - MaxPool2ds

  - [-1, 2, Blocks, [64, BasicBlock, 2, False]] # 2-P3/8 (ResNet layer1)
  - [-1, 2, Blocks, [128, BasicBlock, 2, True]] # 3-P4/16 (ResNet layer2)
  - [-1, 2, Blocks, [256, BasicBlock, 2, True]] # 4-P5/32 (ResNet layer3)
  - [-1, 2, Blocks, [512, BasicBlock, 2, True]] # 5 (ResNet layer4)

  - [-1, 1, SPPF, [1024, 5]] # 6

# YOLO11n head
head:
  - [-1, 1, nn.Upsample, [None, 2, "nearest"]]
  - [[-1, 6], 1, Concat, [1]] # cat backbone P4
  - [-1, 2, C3k2, [512, False]] # 9

  - [-1, 1, nn.Upsample, [None, 2, "nearest"]]
  - [[-1, 4], 1, Concat, [1]] # cat backbone P3
  - [-1, 2, C3k2, [256, False]] # 12 (P3/8-small)

  - [-1, 1, Conv, [256, 3, 2]]
  - [[-1, 13], 1, Concat, [1]] # cat head P4
  - [-1, 2, C3k2, [512, False]] # 15 (P4/16-medium)

  - [-1, 1, Conv, [512, 3, 2]]
  - [[-1, 10], 1, Concat, [1]] # cat head P5
  - [-1, 2, C3k2, [1024, True]] # 18 (P5/32-large)

  - [16, 1, GAM_Attention, [256]] # 19
  - [19, 1, GAM_Attention, [512]] # 20
  - [22, 1, GAM_Attention, [1024]] # 21

  - [[19,20,21], 1, Detect, [nc]] # Detect(P3, P4, P5)