# Ultralytics YOLO ðŸš€, AGPL-3.0 license
# YOLO11 object detection model with ResNet backbone and P3-P5 outputs.
# Parameters
nc: 80 # number of classes
scales: # model compound scaling constants, i.e. 'model=yolo11n.yaml' will call yolo11-RBFKANConv2d.yaml with scale 'n'
  # [depth, width, max_channels]
  n: [0.50, 0.25, 1024] # summary: 319 layers, 2624080 parameters, 2624064 gradients, 6.6 GFLOPs
  s: [0.50, 0.50, 1024] # summary: 319 layers, 9458752 parameters, 9458736 gradients, 21.7 GFLOPs
  m: [0.50, 1.00, 512] # summary: 409 layers, 20114688 parameters, 20114672 gradients, 68.5 GFLOPs
  l: [1.00, 1.00, 512] # summary: 631 layers, 25372160 parameters, 25372144 gradients, 87.6 GFLOPs
  x: [1.00, 1.50, 512] # summary: 631 layers, 56966176 parameters, 56966160 gradients, 196.0 GFLOPs

# ResNet-based backbone
backbone:
  # [from, repeats, module, args]
  - [-1, 1, ConvNormLayer, [64, 7, 2, 3, 'relu', 1]] # 0-P1/2 (ResNet stem), groups=1
  - [-1, 1, nn.MaxPool2d, [3, 2, 1]] # 1-P2/4 (MaxPool)

  - [-1, 3, Blocks, [64, BasicBlock, 2, False]] # 2-P3/8 (ResNet layer1)
  - [-1, 4, Blocks, [128, BasicBlock, 2, True]] # 3-P4/16 (ResNet layer2)
  - [-1, 6, Blocks, [256, BasicBlock, 2, True]] # 4-P5/32 (ResNet layer3)
  - [-1, 3, Blocks, [512, BasicBlock, 2, True]] # 5 (ResNet layer4)

  - [-1, 1, SPPF, [1024, 5]] # 6 (SPPF on top of ResNet output)

# YOLO11 head
head:
  - [-1, 1, nn.Upsample, [None, 2, "nearest"]] # 7 (Upsample to match P4)
  - [[-1, 4], 1, Concat, [1]] # 8 (Concat with P4 from backbone)
  - [-1, 2, C3k2, [512, False, 1]] # 9 (C3k2 block for feature fusion), groups=1

  - [-1, 1, nn.Upsample, [None, 2, "nearest"]] # 10 (Upsample to match P3)
  - [[-1, 3], 1, Concat, [1]] # 11 (Concat with P3 from backbone)
  - [-1, 2, C3k2, [256, False, 1]] # 12 (P3/8-small), groups=1

  - [-1, 1, Conv, [256, 3, 2, 1]] # 13 (Downsample to match P4), groups=1
  - [[-1, 9], 1, Concat, [1]] # 14 (Concat with P4)
  - [-1, 2, C3k2, [512, False, 1]] # 15 (P4/16-medium), groups=1

  - [-1, 1, Conv, [512, 3, 2, 1]] # 16 (Downsample to match P5), groups=1
  - [[-1, 6], 1, Concat, [1]] # 17 (Concat with P5)
  - [-1, 2, C3k2, [1024, True, 1]] # 18 (P5/32-large), groups=1

  - [12, 1, GAM_Attention, [256]] # 19 (GAM Attention for P3)
  - [15, 1, GAM_Attention, [512]] # 20 (GAM Attention for P4)
  - [18, 1, GAM_Attention, [1024]] # 21 (GAM Attention for P5)
  - [[19, 20, 21], 1, Detect, [nc]] # Detect(P3, P4, P5)